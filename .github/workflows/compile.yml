name: 'Compile'
permissions: {}
on: [push, pull_request]
jobs:
  matrix:
    name: 'Get matrix'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: 'Install Emacs'
        run: |
          sudo apt-get install emacs
      - name: 'Install scripts'
        uses: actions/checkout@v4
        with:
          repository: emacscollective/workflows
          path: _scripts
          persist-credentials: false
      - name: 'Checkout ${{ github.repository }}'
        uses: actions/checkout@v4
        with:
          path: ffi
          persist-credentials: false
      - name: 'Get matrix'
        id: matrix
        working-directory: ffi
        run: |
          ../_scripts/bin/get-matrix >> $GITHUB_OUTPUT
          echo "â€¢ get-matrix: emacscollective/workflows@main"
  main:
    name: 'Compile'
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        emacs: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: 'Install Emacs'
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs }}
      - name: 'Install dependencies'
        run: |
          sudo apt-get install build-essential libffi-dev libltdl-dev
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: 'Compile modules'
        run: |
          make module test-module
      - name: 'Compile lisp'
        run: |
          make lisp
      - name: 'Compile lisp (byte-compile-error-on-warn)'
        if: ${{ vars.byte_compile_error_on_warn != 'nil' }}
        run: |
          rm -rf *.elc
          make EMACS_ARGS="--eval '(progn \
          (setq byte-compile-error-on-warn t) \
          ${{ vars.compile_error_settings }})'" lisp
      - name: 'Test'
        run: |
          make test
